{"version":3,"sources":["App.js","index.js"],"names":["App","useState","pokemon","setPokemon","img","setImg","abilities","setAbilities","useEffect","document","title","isCurrent","fetch","then","res","json","sprites","front_default","catch","console","log","className","type","onChange","e","target","value","src","alt","map","a","ability","name","rootElement","getElementById","ReactDOM","render"],"mappings":"6OAsEeA,MA5Df,WAAe,MAEeC,mBAAS,WAFxB,mBAERC,EAFQ,KAECC,EAFD,OAIOF,mBAAS,MAJhB,mBAIRG,EAJQ,KAIHC,EAJG,OAKmBJ,mBAAS,IAL5B,mBAKRK,EALQ,KAKGC,EALH,KAgCb,OAxBAC,qBAAU,WACRC,SAASC,MAAQ,eAAiBR,IACjC,CAACA,IAMJM,qBAAU,WACR,IAAIG,GAAY,EAUhB,OATAC,MAAM,qCAAD,OAAsCV,IAC1CW,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACAH,IACFN,EAAOS,EAAIE,QAAQC,eACnBV,EAAaO,EAAIR,eAGpBY,OAAM,kBAAMC,QAAQC,IAAI,cAClB,WACLT,GAAY,KAEb,CAACT,IAEG,yBAAKmB,UAAU,OACtB,2BAAOC,KAAK,OAAOC,SAAU,SAACC,GAAD,OAAMrB,EAAWqB,EAAEC,OAAOC,UACvD,yCAAexB,GACf,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,4BACE,kBAAC,IAAD,gBAEF,kBAAC,IAAD,KACGE,GAAO,yBAAKuB,IAAKvB,EAAKwB,IAAI,aAG/B,kBAAC,IAAD,KACE,4BACE,kBAAC,IAAD,mBAEF,kBAAC,IAAD,KACCtB,EAAUuB,KAAI,SAAAC,GAAM,IAAD,EACZ,OAAO,oCAAMA,QAAN,IAAMA,GAAN,UAAMA,EAAGC,eAAT,aAAM,EAAYC,cCxDjCC,EAAcxB,SAASyB,eAAe,QAC5CC,IAASC,OAAO,kBAAC,EAAD,MAASH,I","file":"static/js/main.6b3adc59.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Accordion,\n  AccordionItem,\n  AccordionButton,\n  AccordionPanel\n} from \"@reach/accordion\";\nimport \"@reach/accordion/styles.css\";\nimport \"./styles.css\";\n\nfunction App() {\n  // * setPokemon(e.target.value) triggers the change\n  let [pokemon, setPokemon] = useState(\"pikachu\")\n  \n  let [img, setImg] = useState(null)\n  let [abilities, setAbilities] = useState([])\n\n  // useEffect takes in a function and dependency array (where dependency change everytime, function runs)\n  useEffect(() => {\n    document.title = \"saying hello\" + pokemon;\n  }, [pokemon])\n\n  // 1st) fetch API \n  // 2nd) then get json\n  // 3rd) then get the response again\n  // 4th) catch the error\n  useEffect(()=> {\n    let isCurrent = true;\n    fetch(`https://pokeapi.co/api/v2/pokemon/${pokemon}`)\n    .then(res => res.json())\n    .then(res => {\n      if (isCurrent) {\n        setImg(res.sprites.front_default)\n        setAbilities(res.abilities);\n      }\n    })\n    .catch(() => console.log(\"stop it\"))\n    return () => {\n      isCurrent = false\n    }\n  }, [pokemon])\n// * setPokemon(e.target.value) triggers the change\n  return <div className=\"App\">\n  <input type=\"text\" onChange={(e) =>setPokemon(e.target.value)} />\n  <h1>Stats for {pokemon}</h1>\n  <Accordion>\n    <AccordionItem>\n      <h3>\n        <AccordionButton>Sprite</AccordionButton>\n      </h3>\n      <AccordionPanel>\n        {img && <img src={img} alt=\"Sprite\" />}\n      </AccordionPanel>\n    </AccordionItem>\n    <AccordionItem>\n      <h3>\n        <AccordionButton>Abilities</AccordionButton>\n      </h3>\n      <AccordionPanel>\n      {abilities.map(a => {\n              return <div>{a?.ability?.name}</div>;\n            })}\n      </AccordionPanel>\n    </AccordionItem>\n  </Accordion>\n</div>\n\n}\n\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n\n"],"sourceRoot":""}